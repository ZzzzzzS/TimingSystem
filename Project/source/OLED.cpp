#include "OLED.h"
#include "fsl_gpio.h"
#define XLevelL		0x00
#define XLevelH		0x10
#define XLevel		((XLevelH&0x0F)*16+XLevelL)
#define Max_Column	128
#define Max_Row		  64
#define	Brightness	0xCF 

#define X_WIDTH 128
#define Y_WIDTH 64

//======================================================
// 128X64I??????????[14X16]?????
// ?????:ZZS
// ??  ??:[14X16]???????????????? (??????,??????)
//======================================================
const unsigned char F14x16_Idx[] =
{ "????????????????????????????��???????????????????????????????????????????????????????????��???????????????????????????��??" };
const unsigned char F14x16[] = {
	0x00,0x04,0x64,0x54,0x4C,0x47,0xF4,0x44,0x44,0x44,0x44,0x04,0x00,0x00,
	0x02,0x02,0x02,0x02,0x02,0x02,0x3F,0x02,0x02,0x02,0x02,0x02,0x02,0x00,//??",0
	0x64,0x5C,0xE7,0x44,0x44,0x00,0xF2,0x12,0xFE,0x12,0xFE,0x12,0xF2,0x00,
	0x04,0x04,0x3F,0x02,0x02,0x00,0x3F,0x01,0x00,0x01,0x20,0x21,0x3F,0x00,//??",1
	0x00,0x02,0x22,0xB2,0xAA,0x66,0x22,0x21,0x11,0x49,0x81,0x00,0x00,0x00,
	0x00,0x11,0x09,0x05,0x21,0x21,0x3F,0x01,0x01,0x05,0x09,0x13,0x00,0x00,//?",2
	0x98,0x54,0x33,0x18,0x00,0x88,0xC8,0xB9,0x8A,0x88,0xA8,0xC8,0x08,0x00,
	0x11,0x11,0x09,0x09,0x20,0x10,0x0C,0x03,0x00,0x1F,0x20,0x21,0x38,0x00,//?",3
	0x40,0x41,0x41,0xFF,0x41,0x41,0x41,0x41,0x41,0xFF,0x41,0x41,0x40,0x00,
	0x20,0x10,0x0C,0x03,0x00,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//??",4
	0x88,0x78,0x0F,0x08,0xF8,0x20,0x30,0x2C,0x23,0x20,0x28,0x30,0x60,0x00,
	0x20,0x11,0x0A,0x06,0x19,0x00,0x3F,0x11,0x11,0x11,0x11,0x3F,0x00,0x00,//?",5
	0x40,0x42,0xCC,0x00,0x50,0x4E,0x48,0xC8,0x7F,0xC8,0x48,0x48,0x40,0x00,
	0x20,0x10,0x0F,0x10,0x28,0x24,0x22,0x21,0x20,0x27,0x28,0x28,0x2C,0x00,//?",6
	0x08,0x08,0xFF,0x88,0x08,0x42,0x46,0x2A,0x92,0x2A,0x26,0x42,0x40,0x00,
	0x21,0x21,0x3F,0x00,0x08,0x08,0x09,0x09,0x3F,0x09,0x09,0x08,0x08,0x00,//??",7
	0x00,0x00,0xFC,0x24,0x24,0x25,0x26,0x24,0x24,0x24,0x24,0x3C,0x00,0x00,
	0x10,0x0C,0x03,0x00,0x3F,0x11,0x11,0x11,0x11,0x11,0x11,0x3F,0x00,0x00,//??",8
	0x80,0x88,0x88,0x89,0x8E,0x88,0xF8,0x88,0x8C,0x8B,0x88,0x88,0x80,0x00,
	0x20,0x20,0x10,0x08,0x04,0x03,0x00,0x03,0x04,0x08,0x10,0x20,0x20,0x00,//??",9
	0x00,0xF9,0x02,0x20,0x22,0x22,0xA2,0x62,0xFA,0x22,0x22,0x02,0xFE,0x00,
	0x00,0x3F,0x00,0x04,0x02,0x01,0x08,0x08,0x0F,0x00,0x20,0x20,0x3F,0x00,//??",10
	0x04,0xF4,0x95,0x96,0x94,0x94,0xF4,0x04,0xE4,0x06,0x05,0xF4,0x04,0x00,
	0x00,0x3F,0x04,0x04,0x24,0x24,0x3F,0x00,0x07,0x20,0x20,0x3F,0x00,0x00,//?",11
	0x00,0x00,0xFE,0x12,0x92,0x92,0x92,0x92,0x92,0x91,0x91,0x91,0x10,0x00,
	0x10,0x0C,0x03,0x00,0x3F,0x10,0x10,0x10,0x10,0x10,0x10,0x3F,0x00,0x00,//??",12
	0x08,0x08,0x08,0xC8,0xB8,0x8F,0x88,0x88,0x88,0x88,0x88,0x88,0x08,0x00,
	0x08,0x04,0x23,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x00,//??",13
	0x08,0x08,0x88,0xC8,0xB8,0x8F,0x88,0x88,0x88,0x88,0x88,0x08,0x08,0x00,
	0x02,0x01,0x00,0x3F,0x10,0x10,0x10,0x10,0x10,0x10,0x3F,0x00,0x00,0x00,//??",14
	0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x20,0x20,0x20,0x20,0x20,0x00,0x00,
	0x20,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x20,0x00,//??",15
	0x02,0x02,0x02,0x02,0x02,0xFE,0x02,0x02,0x22,0x42,0x82,0x02,0x02,0x00,
	0x00,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,//??",16
	0x00,0xFC,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0xFC,0x00,0x00,
	0x00,0x03,0x01,0x01,0x01,0x01,0x3F,0x01,0x01,0x01,0x01,0x03,0x00,0x00,//??",17
	0xFE,0x24,0xA8,0xFF,0xA8,0x24,0x00,0xFE,0x22,0x22,0xE1,0x21,0x20,0x00,
	0x3F,0x21,0x20,0x2F,0x20,0x23,0x10,0x0F,0x00,0x00,0x3F,0x00,0x00,0x00,//??",18
	0x40,0x40,0x5F,0x55,0x55,0x55,0xD5,0x55,0x55,0x55,0x5F,0x40,0x40,0x00,
	0x20,0x10,0x0F,0x10,0x20,0x20,0x3F,0x22,0x22,0x22,0x22,0x20,0x20,0x00,//??",19
	0x40,0x42,0x22,0x22,0x12,0x0A,0xFE,0x02,0x12,0x12,0x22,0x22,0x40,0x00,
	0x00,0x00,0x3F,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x3F,0x00,0x00,0x00,//??",20
	0x08,0x08,0xFF,0x88,0x00,0x4C,0x24,0x15,0x06,0x04,0x14,0x24,0x4C,0x00,
	0x21,0x21,0x3F,0x00,0x00,0x20,0x21,0x21,0x3F,0x21,0x21,0x21,0x20,0x00,//??",21
	0x28,0x26,0x24,0x24,0xFF,0x24,0x24,0x24,0x00,0xFC,0x00,0xFF,0x00,0x00,
	0x00,0x1F,0x01,0x01,0x3F,0x01,0x11,0x1F,0x00,0x23,0x20,0x3F,0x00,0x00,//??",22
	0x40,0x44,0x54,0x55,0xD6,0x74,0x5C,0x54,0x56,0x55,0x54,0x44,0x40,0x00,
	0x08,0x04,0x22,0x21,0x22,0x22,0x22,0x3E,0x22,0x22,0x22,0x20,0x20,0x00,//??",23
	0x40,0x42,0xCC,0x00,0x04,0xF4,0x94,0x94,0xFF,0x94,0x94,0xF4,0x04,0x00,
	0x20,0x10,0x0F,0x10,0x28,0x24,0x22,0x21,0x3F,0x21,0x22,0x24,0x28,0x00,//??",24
	0x00,0x00,0xFC,0x14,0x14,0x7C,0x55,0x56,0x54,0x54,0x7C,0x14,0x14,0x00,
	0x20,0x18,0x07,0x20,0x21,0x13,0x15,0x09,0x09,0x15,0x13,0x21,0x20,0x00,//??",25
	0x00,0xF8,0x48,0x48,0x48,0x48,0xFF,0x48,0x48,0x48,0x48,0xF8,0x00,0x00,
	0x00,0x07,0x02,0x02,0x02,0x02,0x1F,0x22,0x22,0x22,0x22,0x23,0x38,0x00,//??",26
	0x08,0xC8,0xFF,0x48,0x88,0x00,0xFE,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,
	0x01,0x00,0x3F,0x00,0x20,0x18,0x07,0x00,0x00,0x00,0x1F,0x20,0x38,0x00,//??",27
	0x64,0x5C,0xE7,0x44,0x44,0x00,0x24,0xA4,0x74,0x2F,0x24,0x24,0x24,0x00,
	0x04,0x04,0x3F,0x02,0x02,0x00,0x01,0x01,0x09,0x11,0x29,0x05,0x03,0x00,//?",28
	0x00,0xFC,0x04,0x04,0xE6,0x25,0x24,0x24,0x24,0xE4,0x04,0x04,0xFC,0x00,
	0x00,0x3F,0x00,0x00,0x03,0x02,0x02,0x02,0x02,0x03,0x20,0x20,0x3F,0x00,//??",29
	0x20,0x20,0xEF,0xA9,0xA9,0xAB,0xED,0xA9,0xA9,0xA9,0xEF,0x20,0x20,0x00,
	0x20,0x28,0x2B,0x2A,0x2A,0x2A,0x3F,0x2A,0x2A,0x2A,0x2B,0x28,0x20,0x00,//??",30
	0x40,0x30,0x0E,0x08,0x08,0x08,0xFF,0x08,0x08,0x08,0x08,0x08,0x00,0x00,
	0x01,0x01,0x01,0x01,0x01,0x01,0x3F,0x01,0x01,0x01,0x01,0x01,0x01,0x00,//?",31
	0x20,0x21,0xE6,0x00,0x82,0xBA,0xAA,0xAA,0xAA,0xAA,0xAA,0xBA,0x82,0x00,
	0x20,0x10,0x0F,0x10,0x2F,0x2A,0x2A,0x2A,0x2F,0x2A,0x2A,0x2A,0x2F,0x00,//??",32
	0x08,0x89,0xEA,0x98,0x00,0xFC,0x44,0x44,0xFF,0x44,0x44,0xFC,0x00,0x00,
	0x01,0x00,0x3F,0x00,0x01,0x0F,0x04,0x04,0x3F,0x04,0x04,0x0F,0x00,0x00,//??",33
	0x10,0x9C,0x53,0x30,0x0C,0x00,0xFE,0x22,0x22,0x22,0x22,0xFE,0x00,0x00,
	0x11,0x11,0x11,0x09,0x09,0x20,0x3F,0x22,0x22,0x22,0x22,0x3F,0x20,0x00,//??",34
	0xFC,0x44,0x44,0xFC,0x00,0x08,0x48,0x88,0x08,0x08,0xFF,0x08,0x08,0x00,
	0x0F,0x04,0x04,0x0F,0x00,0x00,0x00,0x01,0x20,0x20,0x3F,0x00,0x00,0x00,//?",35
	0x00,0xF8,0x01,0x06,0xF0,0x92,0x92,0x92,0x92,0xF2,0x02,0x02,0xFE,0x00,
	0x00,0x3F,0x00,0x00,0x07,0x04,0x04,0x04,0x04,0x07,0x20,0x20,0x3F,0x00,//??",36
	0x40,0x20,0xF8,0x07,0x82,0xBA,0xAA,0xAA,0xAB,0xAA,0xAA,0xBA,0x82,0x00,
	0x00,0x00,0x3F,0x00,0x01,0x02,0x02,0x22,0x22,0x3E,0x02,0x02,0x01,0x00,//?",37
	0x08,0xC8,0xFF,0x48,0x80,0xF4,0x5F,0x54,0x54,0x54,0x5F,0xF4,0x04,0x00,
	0x01,0x00,0x3F,0x00,0x24,0x25,0x15,0x0D,0x07,0x0D,0x15,0x25,0x24,0x00,//?",38
	0x08,0x48,0x48,0xC8,0x48,0x48,0x08,0x08,0xFF,0x08,0x09,0x0A,0x08,0x00,
	0x10,0x10,0x10,0x1F,0x08,0x08,0x08,0x00,0x01,0x06,0x08,0x10,0x3C,0x00,//?",39
	0x00,0x02,0xE2,0x02,0x02,0x02,0xFE,0x82,0x82,0x82,0x82,0x02,0x00,0x00,
	0x20,0x20,0x3F,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x20,0x00,//??",40
	0x04,0x84,0x44,0xF4,0x0C,0x87,0x84,0x84,0xF4,0x84,0x84,0x84,0x04,0x00,
	0x01,0x00,0x00,0x3F,0x10,0x10,0x10,0x10,0x1F,0x10,0x10,0x10,0x10,0x00,//??",41
	0x08,0x89,0xEA,0x98,0x48,0x00,0x04,0x04,0xFC,0x04,0x04,0x04,0xFC,0x00,
	0x01,0x00,0x3F,0x00,0x23,0x10,0x08,0x06,0x01,0x00,0x20,0x20,0x1F,0x00,//??",42
	0x40,0x20,0xF8,0x07,0x00,0x00,0x80,0xFF,0x20,0x10,0x08,0x04,0x00,0x00,
	0x00,0x00,0x3F,0x00,0x02,0x01,0x00,0x1F,0x20,0x20,0x20,0x20,0x38,0x00,//??",43
	0x08,0xC8,0xFF,0x48,0xA0,0x10,0x28,0xA4,0x23,0x24,0x28,0x90,0x20,0x00,
	0x01,0x00,0x3F,0x00,0x20,0x22,0x2C,0x20,0x23,0x30,0x2C,0x23,0x20,0x00,//??",44
	0x10,0x22,0x84,0x00,0xFE,0x02,0xFA,0x02,0xFE,0x00,0xF8,0x00,0xFF,0x00,
	0x18,0x06,0x01,0x20,0x11,0x0C,0x03,0x04,0x19,0x00,0x23,0x20,0x3F,0x00,//??",45
	0x08,0x08,0xFF,0x88,0x48,0x02,0x02,0x02,0x02,0xFE,0x02,0x02,0x02,0x00,
	0x21,0x21,0x3F,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x00,0x00,0x00,0x00,//??",46
	0x20,0x21,0xE6,0x00,0x08,0x48,0xC8,0x48,0x08,0xFF,0x08,0x09,0x0A,0x00,
	0x00,0x00,0x1F,0x08,0x14,0x10,0x1F,0x08,0x08,0x01,0x0E,0x10,0x3C,0x00,//??",47
	0xFC,0x04,0x04,0xFC,0x20,0x10,0x28,0x24,0x23,0x24,0x28,0x10,0x20,0x00,
	0x07,0x02,0x02,0x07,0x00,0x3F,0x11,0x11,0x11,0x11,0x11,0x3F,0x00,0x00,//??",0
	0x20,0x18,0x07,0x84,0x04,0x04,0xF4,0x04,0x04,0x84,0x04,0x14,0x0C,0x00,
	0x08,0x04,0x02,0x01,0x20,0x20,0x3F,0x00,0x00,0x00,0x01,0x02,0x0C,0x00,//??",1
	0x10,0x22,0x84,0x00,0x0C,0xE4,0xA4,0xA5,0x96,0x94,0x94,0x8C,0x00,0x00,
	0x18,0x06,0x01,0x04,0x24,0x17,0x04,0x04,0x04,0x17,0x24,0x04,0x04,0x00,//??",2
	0x00,0x02,0x02,0x02,0x02,0x02,0xFE,0x02,0x02,0x02,0x02,0x02,0x00,0x00,
	0x10,0x10,0x10,0x10,0x10,0x10,0x1F,0x10,0x10,0x10,0x10,0x10,0x10,0x00,//??",3
	0x08,0x30,0xC0,0x00,0xFF,0x00,0x00,0x00,0xFF,0x00,0xC0,0x38,0x00,0x00,
	0x20,0x20,0x21,0x20,0x3F,0x20,0x20,0x20,0x3F,0x21,0x20,0x20,0x20,0x00,//?",4
	0x10,0x10,0x10,0x10,0x10,0xD0,0x3F,0xD0,0x10,0x10,0x10,0x10,0x10,0x00,
	0x20,0x20,0x10,0x08,0x06,0x01,0x00,0x01,0x06,0x08,0x10,0x20,0x20,0x00,//??",5
	0x38,0x08,0x49,0x4A,0x48,0x49,0x4A,0x48,0xCC,0x4A,0x09,0x08,0x38,0x00,
	0x02,0x02,0x02,0x02,0x22,0x22,0x3F,0x03,0x02,0x02,0x02,0x02,0x02,0x00,//?",6
	0x00,0xFC,0x94,0x94,0xF4,0x94,0x94,0x04,0xFF,0x04,0x85,0x66,0x04,0x00,
	0x10,0x0F,0x10,0x0B,0x04,0x04,0x2B,0x10,0x09,0x06,0x09,0x10,0x3C,0x00,//??",7
	0x10,0x22,0x84,0x00,0x90,0x88,0xF7,0x94,0xB4,0xD4,0x94,0xF4,0x84,0x00,
	0x18,0x06,0x01,0x00,0x00,0x0E,0x09,0x08,0x0A,0x2C,0x28,0x1F,0x08,0x00,//??",8
	0x08,0x88,0x68,0xFF,0x48,0x88,0x44,0xA4,0x15,0x06,0x14,0xA4,0x44,0x00,
	0x02,0x01,0x00,0x3F,0x00,0x00,0x20,0x11,0x0A,0x04,0x0A,0x11,0x20,0x00,//��",9
	0x00,0xFF,0x01,0x09,0x11,0x21,0x41,0x81,0x41,0x31,0x0D,0x01,0x01,0x00,
	0x00,0x3F,0x20,0x28,0x24,0x22,0x21,0x20,0x21,0x22,0x2C,0x20,0x20,0x00,//??",10
	0x20,0xD0,0x4C,0x43,0x44,0xC8,0x10,0x00,0xF8,0x00,0x00,0xFF,0x00,0x00,
	0x00,0x1F,0x20,0x24,0x24,0x23,0x38,0x00,0x03,0x20,0x20,0x3F,0x00,0x00,//??",11
	0x24,0x2C,0x35,0xA6,0x34,0x2C,0x24,0x00,0xFE,0x22,0x22,0xE1,0x21,0x00,
	0x09,0x25,0x21,0x3F,0x01,0x05,0x29,0x10,0x0F,0x00,0x00,0x3F,0x00,0x00,//??",12
	0x0C,0x04,0x44,0x84,0x14,0x25,0x06,0x04,0xF4,0x04,0x04,0x04,0x0C,0x00,
	0x02,0x22,0x22,0x12,0x12,0x0A,0x06,0x03,0x06,0x0A,0x12,0x22,0x02,0x00,//?",13
	0xF2,0x82,0xFE,0x80,0x20,0x10,0x28,0xA4,0x23,0x24,0x28,0x90,0x20,0x00,
	0x04,0x24,0x22,0x1F,0x20,0x22,0x2C,0x20,0x23,0x30,0x2C,0x23,0x20,0x00,//??",14
	0x0C,0x04,0x94,0xD4,0xB4,0x95,0x96,0x94,0xB4,0xD4,0x94,0x04,0x0C,0x00,
	0x20,0x20,0x24,0x24,0x24,0x24,0x3F,0x24,0x24,0x24,0x25,0x20,0x20,0x00,//??",15
	0x08,0x08,0xFF,0x88,0x00,0x5C,0x44,0xC4,0x75,0x46,0x44,0xC4,0x5C,0x00,
	0x21,0x21,0x3F,0x00,0x00,0x20,0x22,0x13,0x0C,0x04,0x0A,0x11,0x20,0x00,/*"??",0*/
	0x10,0x28,0xE7,0x24,0x00,0x64,0xDC,0x10,0x54,0xFF,0x54,0x7C,0x10,0x00,
	0x01,0x01,0x1F,0x29,0x14,0x08,0x17,0x10,0x25,0x3F,0x25,0x25,0x24,0x00,/*"??",1*/
	0x80,0x84,0x94,0xA4,0x84,0x84,0xFF,0x84,0x84,0xA4,0x94,0x84,0x80,0x00,
	0x10,0x10,0x08,0x04,0x02,0x01,0x3F,0x01,0x02,0x04,0x08,0x10,0x10,0x00,/*"??",2*/
	0x10,0x9C,0x53,0x30,0x0C,0x00,0xFE,0x00,0x24,0xA8,0xFF,0xA8,0x24,0x00,
	0x11,0x11,0x11,0x09,0x09,0x00,0x3F,0x22,0x21,0x20,0x2F,0x20,0x23,0x00,/*"??",3*/
	0x98,0x54,0x33,0x18,0x00,0x90,0x34,0x54,0x1F,0xD4,0x14,0x54,0x30,0x00,
	0x11,0x11,0x09,0x09,0x00,0x22,0x13,0x0A,0x06,0x03,0x0A,0x32,0x02,0x00,/*"??",4*/
	0x10, 0x11, 0xF6, 0x00, 0x00, 0xFE, 0x42, 0x52, 0x7E, 0x52, 0x52, 0x42, 0xFE, 0x00,
	0x00, 0x00, 0x0F, 0x04, 0x22, 0x1F, 0x00, 0x0F, 0x09, 0x09, 0x2F, 0x20, 0x3F, 0x00,/*"??",0*/
	0x00, 0x18, 0x16, 0x10, 0xD0, 0xB8, 0x97, 0x90, 0x90, 0x90, 0x92, 0x14, 0x10, 0x00,
	0x08, 0x04, 0x22, 0x21, 0x20, 0x13, 0x14, 0x08, 0x14, 0x12, 0x21, 0x20, 0x20, 0x00,/*"??",0*/
	0x04, 0x84, 0x44, 0xE4, 0x5C, 0x47, 0x44, 0xF4, 0x44, 0x44, 0x44, 0xC4, 0x04, 0x00,
	0x01, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x08, 0x08, 0x0F, 0x00, 0x00,/*"??",1*/
	0x00, 0xFE, 0x02, 0xEA, 0xAA, 0xAA, 0xEA, 0x02, 0xBF, 0x42, 0xA2, 0x1B, 0x82, 0x00,
	0x22, 0x19, 0x00, 0x18, 0x20, 0x24, 0x2A, 0x21, 0x20, 0x30, 0x00, 0x09, 0x33, 0x00,/*"??",0*/
	0x10, 0x10, 0xFF, 0x10, 0x00, 0x24, 0xA4, 0x64, 0x3F, 0x34, 0x28, 0x26, 0x20, 0x00,
	0x08, 0x08, 0x07, 0x04, 0x02, 0x01, 0x3F, 0x15, 0x15, 0x15, 0x15, 0x3F, 0x00, 0x00,/*"??",0*/
	0x64, 0x5C, 0xE7, 0x44, 0x44, 0x00, 0x24, 0xA4, 0x74, 0x2F, 0x24, 0x24, 0x24, 0x00,
	0x04, 0x04, 0x3F, 0x02, 0x02, 0x00, 0x01, 0x01, 0x09, 0x11, 0x29, 0x05, 0x03, 0x00,/*"?",1*/

};

//======================================================
// 128X64I??????????[8X16]?????
// ?????: powerint
// ??  ??: [8X16]???????????????? (??????,??????)
// !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
//======================================================

const char F8X16[] =
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
	0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
	0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
	0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
	0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
	0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
	0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
	0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
	0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
	0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
	0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
	0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
	0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
	0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
	0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
	0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
	0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
	0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
	0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
	0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
	0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
	0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
	0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
	0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
	0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
	0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
	0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
	0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
	0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
	0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
	0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
	0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
	0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
	0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
	0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
	0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
	0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
	0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
	0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
	0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
	0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
	0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
	0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
	0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
	0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
	0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
	0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
	0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
	0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
	0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
	0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
	0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
	0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
	0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
	0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
	0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
	0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
	0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
	0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
	0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
	0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
	0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
	0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
	0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
	0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
	0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
	0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
	0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
	0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
	0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
	0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
	0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
	0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
	0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
	0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
	0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
	0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
	0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
	0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
	0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
	0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
	0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
	0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
	0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
	0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
	0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
	0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
	0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
	0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00//~94
};

OLED::OLED()
{
	this->Idx=F14x16_Idx;
	this->Fonts=F14x16;
        this->EnglishFonts=F8X16;
}

void OLED::Set_Fonts(const byte* Idx,const byte* Fonts)
{
	this->Idx=Idx;
	this->Fonts=Fonts;
}

void OLED::Set_Fonts_English(const char* EnglishFonts)
{
	this->EnglishFonts=EnglishFonts;
}

void OLED::OLED_WrDat(byte data)
{
  byte i=8;
  GPIO_WritePinOutput(SPIPins[1].base,SPIPins[DC].pin,1);
  asm("nop");
  GPIO_WritePinOutput(SPIPins[D0].base,SPIPins[D0].pin,0);
  asm("nop");
  while (i--)
  {
    if (data & 0x80)
    {
       GPIO_WritePinOutput(SPIPins[D1].base,SPIPins[D1].pin,1);
    }
    else
    {
       GPIO_WritePinOutput(SPIPins[D1].base,SPIPins[D1].pin,0);
    }
    GPIO_WritePinOutput(SPIPins[D0].base,SPIPins[D0].pin,1);
    asm("nop");
    GPIO_WritePinOutput(SPIPins[D0].base,SPIPins[D0].pin,0);
    data <<= 1;
  }
}

void OLED::OLED_WrCmd(byte cmd)
{
  byte i = 8;
  GPIO_WritePinOutput(SPIPins[DC].base,SPIPins[DC].pin,0);
  GPIO_WritePinOutput(SPIPins[D0].base,SPIPins[D0].pin,0);
  while (i--)
  {
    if (cmd & 0x80)
    {
      GPIO_WritePinOutput(SPIPins[D1].base,SPIPins[D1].pin,1);
    }
    else
    {
      GPIO_WritePinOutput(SPIPins[D1].base,SPIPins[D1].pin,0);
    }
    GPIO_WritePinOutput(SPIPins[D0].base,SPIPins[D0].pin,1);
    asm("nop");
    GPIO_WritePinOutput(SPIPins[D0].base,SPIPins[D0].pin,0);
    cmd <<= 1;
  }
}

void OLED::OLED_Set_Pos(byte x, byte y)
{
  OLED_WrCmd(0xb0 + y);
  OLED_WrCmd(((x & 0xf0) >> 4) | 0x10);
  OLED_WrCmd(x & 0x0f);
}

void OLED::OLED_Fill(byte bmp_data)
{
  byte y, x;

  for (y = 0; y<8; y++)
  {
          OLED_WrCmd(0xb0 + y);
          OLED_WrCmd(0x01);
          OLED_WrCmd(0x10);
          for (x = 0; x<X_WIDTH; x++)
                  OLED_WrDat(bmp_data);
  }
}

void OLED::OLED_CLS(void)
{
  byte y, x;
  for (y = 0; y<8; y++)
  {
          OLED_WrCmd(0xb0 + y);
          OLED_WrCmd(0x01);
          OLED_WrCmd(0x10);
          for (x = 0; x<X_WIDTH; x++)
                  OLED_WrDat(0);
  }
}

void OLED::OLED_DLY_ms(unsigned int ms)
{
	unsigned int a;
	while (ms)
	{
		a = 13350;
		while (a--);
		ms--;
	}
	return;
}

void OLED::GPIO_Init()
{
  gpio_pin_config_t config =
  {
      kGPIO_DigitalOutput,
      0,
  };
  GPIO_PinInit(SPIPins[RESET].base,SPIPins[RESET].pin, &config);
  GPIO_PinInit(SPIPins[DC].base,SPIPins[DC].pin, &config);
  GPIO_PinInit(SPIPins[D1].base,SPIPins[D1].pin, &config);
  GPIO_PinInit(SPIPins[D0].base,SPIPins[D0].pin, &config);
}

void OLED::OLED_Init()
{
  GPIO_Init();
  OLED_DLY_ms(50);
  GPIO_WritePinOutput(SPIPins[RESET].base,SPIPins[RESET].pin,1);
  OLED_WrCmd(0xae);//--turn off oled panel
  OLED_WrCmd(0x00);//---set low column address
  OLED_WrCmd(0x10);//---set high column address
  OLED_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
  OLED_WrCmd(0x81);//--set contrast control register
  OLED_WrCmd(0xcf); // Set SEG Output Current Brightness
  OLED_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0??????? 0xa1????
  OLED_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0???��??? 0xc8????
  OLED_WrCmd(0xa6);//--set normal display
  OLED_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
  OLED_WrCmd(0x3f);//--1/64 duty
  OLED_WrCmd(0xd3);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
  OLED_WrCmd(0x00);//-not offset
  OLED_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
  OLED_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
  OLED_WrCmd(0xd9);//--set pre-charge period
  OLED_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
  OLED_WrCmd(0xda);//--set com pins hardware configuration
  OLED_WrCmd(0x12);
  OLED_WrCmd(0xdb);//--set vcomh
  OLED_WrCmd(0x40);//Set VCOM Deselect Level
  OLED_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
  OLED_WrCmd(0x02);//
  OLED_WrCmd(0x8d);//--set Charge Pump enable/disable
  OLED_WrCmd(0x14);//--set(0x10) disable
  OLED_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
  OLED_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
  OLED_WrCmd(0xaf);//--turn on oled panel
  OLED_Fill(0x00);  //???????
  OLED_Set_Pos(0, 0);
}

void OLED::OLED_PutPixel(byte x, byte y)
{
  byte data1;  //data1?????????? 
  
  OLED_Set_Pos(x, y);
  data1 = 0x01 << (y % 8);
  OLED_WrCmd(0xb0 + (y >> 3));
  OLED_WrCmd(((x & 0xf0) >> 4) | 0x10);
  OLED_WrCmd((x & 0x0f) | 0x00);
  OLED_WrDat(data1);
}

void OLED::OLED_P8x16Str(byte x, byte y, byte ch[])
{
  byte c = 0, i = 0, j = 0;

  while (ch[j] != '\0')
  {
          c = ch[j] - 32;
          if (x>120) { x = 0; y++; }
          OLED_Set_Pos(x, y);
          for (i = 0; i<8; i++)
          {
                  OLED_WrDat(this->EnglishFonts[c * 16 + i]);
  
          }
          OLED_Set_Pos(x, y + 1);
          for (i = 0; i<8; i++)
          {
                  OLED_WrDat(this->EnglishFonts[c * 16 + i + 8]);
  
          }
          x += 8;
          j++;
  }
}

void OLED::OLED_P14x16Str(byte x, byte y, byte ch[])
{
  byte wm = 0, ii = 0;
  unsigned int adder = 1;
  
  while (ch[ii] != '\0')
  {
          wm = 0;
          adder = 1;
          while (this->Idx[wm] > 127)
          {
                  if (this->Idx[wm] == ch[ii])
                  {
                          if (this->Idx[wm + 1] == ch[ii + 1])
                          {
                                  adder = wm * 14;
                                  break;
                          }
                  }
                  wm += 2;
          }
          if (x>118) { x = 0; y++; }
          OLED_Set_Pos(x, y);
          if (adder != 1)// ???????					
          {
                  OLED_Set_Pos(x, y);
                  for (wm = 0; wm < 14; wm++)
                  {
                          OLED_WrDat(this->Fonts[adder]);
                          adder += 1;
                  }
                  OLED_Set_Pos(x, y + 1);
                  for (wm = 0; wm < 14; wm++)
                  {
                          OLED_WrDat(this->Fonts[adder]);
                          adder += 1;
                  }
          }
          else			  //?????????			
          {
                  ii += 1;
                  OLED_Set_Pos(x, y);
                  for (wm = 0; wm < 16; wm++)
                  {
                          OLED_WrDat(0);
                  }
                  OLED_Set_Pos(x, y + 1);
                  for (wm = 0; wm < 16; wm++)
                  {
                          OLED_WrDat(0);
                  }
          }
          x += 14;
          ii += 2;
  }
}

void OLED::OLED_Print(byte x, byte y, char ch[])
{
  byte ch2[3];
  byte ii = 0;
  while (ch[ii] != '\0')
  {
          if (ch[ii] > 127)
          {
                  ch2[0] = ch[ii];
                  ch2[1] = ch[ii + 1];
                  ch2[2] = '\0';			//????????????
                  OLED_P14x16Str(x, y, ch2);	//???????
                  x += 14;
                  ii += 2;
          }
          else
          {
                  ch2[0] = ch[ii];
                  ch2[1] = '\0';			//??????????
                  OLED_P8x16Str(x, y, ch2);	//??????
                                                                          //OLED_P6x8Str(x , y , ch2);       //��????
                  x += 8;
                  ii += 1;
          }
  }
}
